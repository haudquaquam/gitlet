Q: Is one sorting algorithm always faster than another?
A: Yes, bubble sorts are always slower than the counting sorter, no matter the number of repetitions.

Q: Above we said that BubbleSort, WipingBubbleSort, and InsertionSort each had the same Theta(N^2) asymptotic time complexity. How can you explain the differences in the plots for these three algorithms?
A: The plots for these three algorithms are different despite all having the same asymptotic time complexity, because Theta(N^2) tells us that they grow quadratically. They have different coefficients and thus look different.

Q: What information can we gain from empirical analysis of algorithms which might not be as noticeable in asymptotical bounds?
A: By empirical analysis, you can see which algorithms are consistently slower after a large amount of trials. You can see how algorithms with the same asymptotic time complexity can be much slower/faster than each other.

Q: For any given sorting algorithm, does increasing the array size always mean the sorting takes longer?
A: No, there are many points in the sorter graphs, where an increased array size yields a faster runtime than a smaller array size.

Q: How does changing nrepeats change the plot?
A: Changing nrepeats changes the plot by making the slope less consistent with the asymptotic time complexity with fewer repeats. With more repeats, it is more consistent, but it takes much longer to run.

Q: Is your plot the exact same as your partner's plot, even with the same values of ntrials, by, and nrepeats?
A: No, our plots are not the exact same even with the same values. They vary at multiple points but have the same general shape.

Q: Optional: Look at the source code for BubbleSorter to WipingBubbleSorter. After looking at the plots, can you intuitively explain why WipingBubbleSorter is usually 2x as fast as BubbleSorter? (Hint: Consider the immobility of some elements when the swapping passes are single directional (i.e. only going forward), and how this "Wiping" strategy helps deal with that issue.) Can you come up with an example that shows the difference in runtime?
A: Bubble sort can only move large items stuck in the beginning of an array multiple steps towards their proper position, and it does not account for small items stuck near the right end of the array. Wiping bubble sort will account for both, so it is faster.